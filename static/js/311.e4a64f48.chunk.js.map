{"version":3,"file":"static/js/311.e4a64f48.chunk.js","mappings":"yLAUA,EAViB,SAAHA,GAAgC,IAA3BC,EAAID,EAAJC,KAAMC,EAAGF,EAAHE,IAAKC,EAASH,EAATG,UAC5B,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,IAAKN,EAAKO,IAAI,GAAGC,MAAO,OAC7BH,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,KACLG,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,cAAYL,EAAK,MAAIE,OAG9B,EC4BA,EAhCa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAcpB,OALFI,MAAM,sCAADC,OAAuCT,EAAO,2BARjC,CACdU,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKlBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GAAQ,OAAIR,EAAQQ,EAAST,KAAK,IACvCW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,KAG9BzB,EAAAA,EAAAA,MAAA,OAAK4B,UAAU,YAAW1B,SAAA,CACvBW,IAAQV,EAAAA,EAAAA,KAAA,MAAAD,SACNW,EAAKgB,KAAI,SAAAC,GACV,OACE3B,EAAAA,EAAAA,KAAC4B,EAAQ,CAAelC,KAAMiC,EAAKjC,KAAMC,IAAG,uCAAAkB,OAAyCc,EAAKE,cAAgBjC,UAAW+B,EAAK/B,WAA3G+B,EAAKG,GAExB,MAGCpB,GAAQA,EAAKqB,QAAU,IAAK/B,EAAAA,EAAAA,KAAA,OAAAD,SAAK,+DAGxC,C","sources":["components/CastList/CastList.js","components/Cast/Cast.js"],"sourcesContent":["const CastList = ({name, img, character}) => {\n  return (\n    <>\n      <img src={img} alt=\"\" width={200}/>\n      <h3>{name}</h3>\n      <p>Character: {name} / {character}</p>\n    </>\n  )\n}\n\nexport default CastList;","import { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport CastList from \"components/CastList/CastList\";\n\nconst Cast = () => {\n  const { movieID } = useParams();\n  const [cast, setCast] = useState(null);\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NWQ3MmI4YmY3NzViNTQ2MGI4NWM1MTM3ZjdlYThiMCIsInN1YiI6IjY0Y2NjMzE3NzY0Yjk5MDEwMDg5ZmY3NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-ThxIF28BeQiNBNVpfHRn1dS_7TjKdSPSguFk1068hc'\n    }\n  };\n\nfetch(`https://api.themoviedb.org/3/movie/${movieID}/credits?language=en-US`, options)\n  .then(response => response.json())\n  .then(response => setCast(response.cast))\n  .catch(err => console.error(err));\n  \n  return (\n    <div className=\"container\">\n      {cast && <ul>\n        {cast.map(item => {\n        return (\n          <CastList key={item.id} name={item.name} img={`https://image.tmdb.org/t/p/original/${item.profile_path}`} character={item.character} />\n        )\n      })}\n      </ul>}\n\n      {cast && cast.length <= 0 && <div>We don`t have any information about cast for this movie.</div>}\n    </div>\n  )\n}\n\n\nexport default Cast;"],"names":["_ref","name","img","character","_jsxs","_Fragment","children","_jsx","src","alt","width","movieID","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","fetch","concat","method","headers","accept","Authorization","then","response","json","catch","err","console","error","className","map","item","CastList","profile_path","id","length"],"sourceRoot":""}