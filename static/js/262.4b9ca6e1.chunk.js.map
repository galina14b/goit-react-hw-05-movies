{"version":3,"file":"static/js/262.4b9ca6e1.chunk.js","mappings":"kIAoBA,IAjBmB,SAAHA,GAAwB,IAAlBC,EAAUD,EAAVC,WAEdC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACxBL,GAAcA,EAAWM,KAAI,SAAAC,GAC5B,OACEJ,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAAeC,GAAE,iBAAAC,OAAmBH,EAAKI,IAAMC,MAAO,CAACC,KAAMZ,GAAWG,UAAU,yCAAyC,eAAa,OAAMC,SAChJE,EAAKO,OADGP,EAAKI,GAIpB,KAGN,C,0GCWA,EA1BmB,SAAHZ,GAAcA,EAARgB,SAAgB,IACpCC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA6BC,EAAAA,EAAAA,IAAgB,IAAnCC,GAAsCL,EAAAA,EAAAA,GAAAG,EAAA,GAAvB,GAgBzB,OACEG,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SAAOuB,KAAK,OAAOtB,UAAU,eAAeuB,MAAOP,EAAaQ,SAAU,SAACC,GAf3D,IAACC,KAe4ED,EAAEE,OAAOJ,QAXtGN,EAAeS,EAW6F,EAAEE,YAAY,WAAW,aAAW,uBAAuB,mBAAiB,mBACxL7B,EAAAA,EAAAA,KAAA,UAAQC,UAAU,4BAA4B6B,QARlD,WACET,EAAgB,CAAE,UAAaJ,IAC/BC,EAAe,GACjB,EAKmEK,KAAK,SAASf,GAAG,gBAAeN,SAAC,aAGtG,E,SCkBA,EAtCmB,WAAO,IAAD6B,EAEvBZ,GAAuBC,EAAAA,EAAAA,IAAgB,IACjCY,EAAyC,QAAhCD,GAD2Bf,EAAAA,EAAAA,GAAAG,EAAA,GAAvB,GACYc,IAAI,oBAAY,IAAAF,EAAAA,EAAI,GACnDlB,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CqB,EAAUnB,EAAA,GAAEoB,EAAapB,EAAA,GAsBhC,OApBAqB,EAAAA,EAAAA,YAAU,WASRC,MAAM,mDAAD9B,OAAoDyB,EAAS,8CARlD,CACdM,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GAAQ,OAAIR,EAAcQ,EAASE,QAAQ,IAChDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAMpC,GAAG,CAACf,EAAWE,KAGbZ,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAACkD,EAAU,IACVhB,IAAclC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACtD,WAAYqC,MAG7C,C","sources":["components/MoviesList/MoviesList.js","components/SearchForm/SearchForm.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\n\nconst MoviesList = ({ moviesList }) => {\n  \n  const location = useLocation();\n  \n  return (\n    <div className=\"list-group\">\n      {moviesList && moviesList.map(item => {\n        return (\n          <Link key={item.id} to={`/movies/movie/${item.id}`} state={{from: location}} className=\"list-group-item list-group-item-action\" aria-current=\"true\">\n            {item.title}\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default MoviesList;","import { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [ , setSearchParams] = useSearchParams('');\n\n\n  const upDateQuery = (query) => {\n    if (!query) {\n      return\n    } else {\n      setSearchQuery(query);\n    }\n  }\n\n  function Submit() {\n    setSearchParams({ \"movieName\": searchQuery });\n    setSearchQuery('');\n  };\n  \n  return (\n    <div className=\"input-group mb-3\">\n      <input type=\"text\" className=\"form-control\" value={searchQuery} onChange={(e) => upDateQuery(e.target.value)} placeholder=\"Movie...\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n      <button className=\"btn btn-outline-secondary\" onClick={Submit} type=\"button\" id=\"button-addon2\">Search</button>\n    </div>\n  )\n}\n\nexport default SearchForm;","import { useSearchParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\n\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\nconst MoviesPage = () => {\n\n  const [searchParams] = useSearchParams('');\n  const movieName = searchParams.get(\"movieName\") ?? '';\n  const [resultList, setResultList] = useState(null);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NWQ3MmI4YmY3NzViNTQ2MGI4NWM1MTM3ZjdlYThiMCIsInN1YiI6IjY0Y2NjMzE3NzY0Yjk5MDEwMDg5ZmY3NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-ThxIF28BeQiNBNVpfHRn1dS_7TjKdSPSguFk1068hc'\n        }\n    };\n\n    fetch(`https://api.themoviedb.org/3/search/movie?query=${movieName}&include_adult=false&language=en-US&page=1`, options)\n      .then(response => response.json())\n      .then(response => setResultList(response.results))\n      .catch(err => console.error(err));\n    \n    if (!resultList) {\n      return\n    }\n\n  }, [movieName, resultList])\n\n  return (\n    <div className=\"container\">\n      <SearchForm/>\n      {resultList && <MoviesList moviesList={resultList} />}\n    </div>\n  )\n}\n\nMoviesPage.propTypes = {\n  moviesList: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default MoviesPage;"],"names":["_ref","moviesList","location","useLocation","_jsx","className","children","map","item","Link","to","concat","id","state","from","title","onSubmit","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","setSearchParams","_jsxs","type","value","onChange","e","query","target","placeholder","onClick","_searchParams$get","movieName","get","resultList","setResultList","useEffect","fetch","method","headers","accept","Authorization","then","response","json","results","catch","err","console","error","SearchForm","MoviesList"],"sourceRoot":""}